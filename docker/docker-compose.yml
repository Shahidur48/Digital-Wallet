version: '2.1'
services:
  database_user:
    image: postgres:latest
    ports:
      - "5570:5570"
    expose:
      - "5570"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_user"
    command: -p 5570
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  database_product:
    image: postgres:latest
    ports:
      - "5571:5571"
    expose:
      - "5571"
    command: -p 5571
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_product"
    volumes:
      - ./init_product.sql:/docker-entrypoint-initdb.d/1-init_product.sql
      - ./data_product.sql:/docker-entrypoint-initdb.d/2-data_product.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  database_wallet:
    image: postgres:latest
    ports:
      - "5572:5572"
    expose:
      - "5572"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_wallet"
    command: -p 5572
    volumes:
      - ./init_wallet.sql:/docker-entrypoint-initdb.d/1-init_wallet.sql
      - ./data_wallet.sql:/docker-entrypoint-initdb.d/2-data_wallet.sql
    networks:
      backend:
        aliases:
          - "database"
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
  configserver:
    image: ostock/configserver:0.0.1-SNAPSHOT
    ports:
       - "8071:8071"
    healthcheck:
      test: ""
      interval: 8s
      timeout: 8s
      retries: 2
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    networks:
      backend:
        aliases:
          - "configserver"
  eurekaserver:
    image: ostock/eurekaserver:0.0.1-SNAPSHOT
    ports:
      - "8070:8070"
    healthcheck:
      test: ""
      interval: 8s
      timeout: 8s
      retries: 2
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      backend:
        aliases:
          - "eurekaserver"
  gatewayserver:
    image: ostock/gatewayserver:0.0.1-SNAPSHOT
    ports:
      - "8072:8072"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8072"
      CONFIGSERVER_URI: "http://configserver:8071"
      EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
      EUREKASERVER_PORT: "8070"
      CONFIGSERVER_PORT: "8071"
    depends_on:
      configserver:
        condition: service_healthy
      eurekaserver:
        condition: service_healthy
    networks:
      backend:
        aliases:
          - "gateway"
  userservice:
    image: ostock/user-service:0.0.3-SNAPSHOT
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      SERVER_PORT: "8090"
      ENCRYPT_KEY:       "IMSYMMETRIC"
    depends_on:
      configserver:
        condition: service_healthy
    ports:
      - "8090:8090"
    networks:
      - backend
  productservice:
    image: ostock/product-service:0.0.3-SNAPSHOT
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      SERVER_PORT: "8091"
      ENCRYPT_KEY:       "IMSYMMETRIC"
    depends_on:
      configserver:
        condition: service_healthy
    ports:
      - "8091:8091"
    networks:
      - backend
  walletservice:
    image: ostock/wallet-service:0.0.3-SNAPSHOT
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT:   "8071"
      SERVER_PORT: "8092"
      ENCRYPT_KEY:       "IMSYMMETRIC"
    depends_on:
      configserver:
        condition: service_healthy
    ports:
      - "8092:8092"
    networks:
      - backend


networks:
  backend:
    driver: bridge